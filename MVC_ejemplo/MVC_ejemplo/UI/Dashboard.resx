<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4VCKLgxaqUVLdFhM6nzxz4BWUW7PslhH8kv/2Q==
</value>
  </data>
</root>